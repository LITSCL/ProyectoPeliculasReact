{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MelchioT\\\\Documents\\\\VisualStudioCodeWork\\\\EjercicioReact\\\\src\\\\components\\\\Componente.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Componente = props => {\n  _s();\n\n  var [yearActual, setYearActual] = useState(props.yearActual);\n\n  const aumentarHandler = e => {\n    setYearActual(yearActual + 1);\n  };\n\n  const decrementarHandler = e => {\n    setYearActual(yearActual - 1);\n  };\n\n  const cambiarYearHandler = (e, year) => {\n    let input = e.target.value; // Lógica para establecer si la entrada en el input es estrictamente un \n    // número entero (negativos incluidos).\n\n    let isInputInteger = true; // Ciclo que recorre cada caracter del input\n\n    for (let k = 0; k < input.length; k++) {\n      let charCode = input.charCodeAt(k); // Esto regresa el código unicode del caracter.\n      // Los valores desde 47 hasta 57 del códio unicode corresponden a los\n      // caracteres 0 hasta 9\n\n      if (charCode < 48 || charCode > 57) {\n        // Excepción del caracter \"-\" (unicode: 45) para permitir negativos.\n        if (k === 0 && charCode === 45) {} else {\n          isInputInteger = false;\n          break;\n        }\n      }\n    }\n\n    ; // Imprimir mensaje de error si no se escribe un número entero en el input\n\n    let message = document.getElementById(\"invalidInput\");\n\n    if (input === \"\" || input === \"-\") {\n      setYear(currentYear);\n      message.innerHTML = \"\";\n    } else if (!isInputInteger) {\n      setYear(currentYear);\n      message.innerHTML = \"Entrada inválida\";\n    } else {\n      let newYear = parseInt(input);\n      setYear(newYear);\n      message.innerHTML = \"\";\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: yearActual\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => aumentarHandler(e),\n        children: \"Aumentar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => decrementarHandler(e),\n        children: \"Decrementar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => cambiarYearHandler(e, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Componente, \"pfqJjxxXWCJHkJ55im7vxkk+IBY=\");\n\n_c = Componente;\nComponente.propTypes = {\n  yearActual: PropTypes.number.isRequired\n};\nexport default Componente;\n\nvar _c;\n\n$RefreshReg$(_c, \"Componente\");","map":{"version":3,"names":["React","useState","PropTypes","Componente","props","yearActual","setYearActual","aumentarHandler","e","decrementarHandler","cambiarYearHandler","year","input","target","value","isInputInteger","k","length","charCode","charCodeAt","message","document","getElementById","setYear","currentYear","innerHTML","newYear","parseInt","propTypes","number","isRequired"],"sources":["C:/Users/MelchioT/Documents/VisualStudioCodeWork/EjercicioReact/src/components/Componente.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nexport const Componente = (props) => {\r\n  var [yearActual, setYearActual] = useState(props.yearActual);\r\n\r\n  const aumentarHandler = (e) => {\r\n    setYearActual(yearActual + 1);\r\n  }\r\n\r\n  const decrementarHandler = (e) => {\r\n    setYearActual(yearActual - 1);\r\n  }\r\n\r\n  const cambiarYearHandler = (e, year) => {\r\n    let input = e.target.value;\r\n\r\n    // Lógica para establecer si la entrada en el input es estrictamente un \r\n    // número entero (negativos incluidos).\r\n    let isInputInteger = true;\r\n\r\n    // Ciclo que recorre cada caracter del input\r\n    for (let k = 0; k < input.length; k++) {\r\n        let charCode = input.charCodeAt(k);  // Esto regresa el código unicode del caracter.\r\n\r\n        // Los valores desde 47 hasta 57 del códio unicode corresponden a los\r\n        // caracteres 0 hasta 9\r\n        if (charCode < 48 || charCode > 57) {\r\n            // Excepción del caracter \"-\" (unicode: 45) para permitir negativos.\r\n            if (k === 0 && charCode === 45) {\r\n            }\r\n            else {\r\n                isInputInteger = false;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    // Imprimir mensaje de error si no se escribe un número entero en el input\r\n    let message = document.getElementById(\"invalidInput\");\r\n    if (input === \"\" || input === \"-\") {\r\n        setYear(currentYear);\r\n        message.innerHTML = \"\";\r\n    } else if (!isInputInteger) {\r\n        setYear(currentYear);\r\n        message.innerHTML = \"Entrada inválida\";\r\n    } else {\r\n        let newYear = parseInt(input);\r\n        setYear(newYear);\r\n        message.innerHTML = \"\";\r\n    };\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <strong>{yearActual}</strong>\r\n      <p>\r\n        <button onClick={e => aumentarHandler(e)}>Aumentar</button>\r\n      </p>\r\n      <p>\r\n        <button onClick={e => decrementarHandler(e)}>Decrementar</button>\r\n      </p>\r\n      <p>\r\n        <input type=\"text\" onChange={e => cambiarYearHandler(e, e.target.value)}/>\r\n      </p>\r\n    </>\r\n  )\r\n}\r\n\r\nComponente.propTypes = { \r\n  yearActual: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Componente;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EACnC,IAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAACG,KAAK,CAACC,UAAP,CAA1C;;EAEA,MAAME,eAAe,GAAIC,CAAD,IAAO;IAC7BF,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;EACD,CAFD;;EAIA,MAAMI,kBAAkB,GAAID,CAAD,IAAO;IAChCF,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;EACD,CAFD;;EAIA,MAAMK,kBAAkB,GAAG,CAACF,CAAD,EAAIG,IAAJ,KAAa;IACtC,IAAIC,KAAK,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAArB,CADsC,CAGtC;IACA;;IACA,IAAIC,cAAc,GAAG,IAArB,CALsC,CAOtC;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACnC,IAAIE,QAAQ,GAAGN,KAAK,CAACO,UAAN,CAAiBH,CAAjB,CAAf,CADmC,CACE;MAErC;MACA;;MACA,IAAIE,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAAhC,EAAoC;QAChC;QACA,IAAIF,CAAC,KAAK,CAAN,IAAWE,QAAQ,KAAK,EAA5B,EAAgC,CAC/B,CADD,MAEK;UACDH,cAAc,GAAG,KAAjB;UACA;QACH;MACJ;IACJ;;IAAA,CAtBqC,CAwBtC;;IACA,IAAIK,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;;IACA,IAAIV,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC;MAC/BW,OAAO,CAACC,WAAD,CAAP;MACAJ,OAAO,CAACK,SAAR,GAAoB,EAApB;IACH,CAHD,MAGO,IAAI,CAACV,cAAL,EAAqB;MACxBQ,OAAO,CAACC,WAAD,CAAP;MACAJ,OAAO,CAACK,SAAR,GAAoB,kBAApB;IACH,CAHM,MAGA;MACH,IAAIC,OAAO,GAAGC,QAAQ,CAACf,KAAD,CAAtB;MACAW,OAAO,CAACG,OAAD,CAAP;MACAN,OAAO,CAACK,SAAR,GAAoB,EAApB;IACH;;IAAA;EAEF,CAtCD;;EAwCA,oBACE;IAAA,wBACE;MAAA,UAASpB;IAAT;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QAAQ,OAAO,EAAEG,CAAC,IAAID,eAAe,CAACC,CAAD,CAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAKE;MAAA,uBACE;QAAQ,OAAO,EAAEA,CAAC,IAAIC,kBAAkB,CAACD,CAAD,CAAxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF,eAQE;MAAA,uBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,QAAQ,EAAEA,CAAC,IAAIE,kBAAkB,CAACF,CAAD,EAAIA,CAAC,CAACK,MAAF,CAASC,KAAb;MAApD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAcD,CAjEM;;GAAMX,U;;KAAAA,U;AAmEbA,UAAU,CAACyB,SAAX,GAAuB;EACrBvB,UAAU,EAAEH,SAAS,CAAC2B,MAAV,CAAiBC;AADR,CAAvB;AAIA,eAAe3B,UAAf"},"metadata":{},"sourceType":"module"}