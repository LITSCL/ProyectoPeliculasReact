{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MelchioT\\\\Documents\\\\VisualStudioCodeWork\\\\Lajax\\\\src\\\\components\\\\AjaxConFetchYThen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AjaxConFetchYThen = props => {\n  _s();\n\n  var [usuarios, setUsuarios] = useState([]);\n  var [cargando, setCargando] = useState(true);\n\n  const getUsuarios = () => {\n    fetch(\"https://reqres.in/api/users?page=1\") //1. Haciendo petición al servidor.\n    .then(response => response.json()) //2. Obteniendo respuesta y transformandola a JSON.\n    .then(response => {\n      //3. Realizar acciones con la respuesta obtenida.\n      setUsuarios(response.data); //4. Actualizando el estado.\n    });\n  };\n\n  useEffect(() => {\n    getUsuarios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Listado de usuarios \\\"Fetch + Then\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: usuarios.map(usuario => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [usuario.first_name, \" \", usuario.last_name]\n        }, usuario.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AjaxConFetchYThen, \"VwBsyvHAicF7Bl8F2/D6xnC2qgg=\");\n\n_c = AjaxConFetchYThen;\nexport default AjaxConFetchYThen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AjaxConFetchYThen\");","map":{"version":3,"names":["React","useState","useEffect","AjaxConFetchYThen","props","usuarios","setUsuarios","cargando","setCargando","getUsuarios","fetch","then","response","json","data","map","usuario","first_name","last_name","id"],"sources":["C:/Users/MelchioT/Documents/VisualStudioCodeWork/Lajax/src/components/AjaxConFetchYThen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport const AjaxConFetchYThen = (props) => {\r\n  var [usuarios, setUsuarios] = useState([]);\r\n  var [cargando, setCargando] = useState(true);\r\n  \r\n  const getUsuarios = () => {\r\n\r\n    fetch(\"https://reqres.in/api/users?page=1\") //1. Haciendo petición al servidor.\r\n    .then(response => response.json()) //2. Obteniendo respuesta y transformandola a JSON.\r\n    .then(response => { //3. Realizar acciones con la respuesta obtenida.\r\n      setUsuarios(response.data) //4. Actualizando el estado.\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsuarios();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Listado de usuarios \"Fetch + Then\"</h2>\r\n      <ol>\r\n        {\r\n          usuarios.map(usuario => {\r\n            return <li key={usuario.id}>{usuario.first_name} {usuario.last_name}</li>\r\n          })\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AjaxConFetchYThen;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EAAA;;EAC1C,IAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;EACA,IAAI,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAtC;;EAEA,MAAMQ,WAAW,GAAG,MAAM;IAExBC,KAAK,CAAC,oCAAD,CAAL,CAA4C;IAA5C,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACmC;IADnC,CAECF,IAFD,CAEMC,QAAQ,IAAI;MAAE;MAClBN,WAAW,CAACM,QAAQ,CAACE,IAAV,CAAX,CADgB,CACW;IAC5B,CAJD;EAKD,CAPD;;EASAZ,SAAS,CAAC,MAAM;IACdO,WAAW;EACZ,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAEIJ,QAAQ,CAACU,GAAT,CAAaC,OAAO,IAAI;QACtB,oBAAO;UAAA,WAAsBA,OAAO,CAACC,UAA9B,OAA2CD,OAAO,CAACE,SAAnD;QAAA,GAASF,OAAO,CAACG,EAAjB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAYD,CA7BM;;GAAMhB,iB;;KAAAA,iB;AA+Bb,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}