{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MelchioT\\\\Documents\\\\VisualStudioCodeWork\\\\ProyectoReact\\\\src\\\\ComunicacionComponentes.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //Este m贸dulo permite validar el tipo de dato las propiedades que son enviadas desde el componente padre.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ComunicacionComponentes = propiedades => {\n  console.log(propiedades.rut);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"ComunicacionComponentes.js\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: propiedades.rut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ComunicacionComponentes;\nComunicacionComponentes.propTypes = {\n  //Asignando validaci贸n de tipo de dato a las propiedades.\n  rut: PropTypes.string.isRequired,\n  //Indicando que la propiedad \"rut\" debe ser un string y que debe existir obligatoriamente.\n  nombre: PropTypes.string,\n  //Indicando que la propiedad \"nombre\" debe ser un string.\n  apellido: PropTypes.string,\n  fichaMedica: PropTypes.object\n};\nexport default ComunicacionComponentes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComunicacionComponentes\");","map":{"version":3,"names":["React","PropTypes","ComunicacionComponentes","propiedades","console","log","rut","propTypes","string","isRequired","nombre","apellido","fichaMedica","object"],"sources":["C:/Users/MelchioT/Documents/VisualStudioCodeWork/ProyectoReact/src/ComunicacionComponentes.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'; //Este m贸dulo permite validar el tipo de dato las propiedades que son enviadas desde el componente padre.\r\n\r\nexport const ComunicacionComponentes = (propiedades) => {\r\n  console.log(propiedades.rut)\r\n  return (\r\n    <>\r\n      <hr/>\r\n        ComunicacionComponentes.js\r\n      <hr/>\r\n      <h3>{propiedades.rut}</h3>\r\n    </>\r\n  )\r\n}\r\n\r\nComunicacionComponentes.propTypes = { //Asignando validaci贸n de tipo de dato a las propiedades.\r\n  rut: PropTypes.string.isRequired, //Indicando que la propiedad \"rut\" debe ser un string y que debe existir obligatoriamente.\r\n  nombre: PropTypes.string, //Indicando que la propiedad \"nombre\" debe ser un string.\r\n  apellido: PropTypes.string,\r\n  fichaMedica: PropTypes.object\r\n}\r\n\r\nexport default ComunicacionComponentes;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;;;AAEpC,OAAO,MAAMC,uBAAuB,GAAIC,WAAD,IAAiB;EACtDC,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,GAAxB;EACA,oBACE;IAAA,wBACE;MAAA;MAAA;MAAA;IAAA,QADF,6CAGE;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,UAAKH,WAAW,CAACG;IAAjB;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAQD,CAVM;KAAMJ,uB;AAYbA,uBAAuB,CAACK,SAAxB,GAAoC;EAAE;EACpCD,GAAG,EAAEL,SAAS,CAACO,MAAV,CAAiBC,UADY;EACA;EAClCC,MAAM,EAAET,SAAS,CAACO,MAFgB;EAER;EAC1BG,QAAQ,EAAEV,SAAS,CAACO,MAHc;EAIlCI,WAAW,EAAEX,SAAS,CAACY;AAJW,CAApC;AAOA,eAAeX,uBAAf"},"metadata":{},"sourceType":"module"}