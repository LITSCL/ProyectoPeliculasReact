{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MelchioT\\\\Documents\\\\VisualStudioCodeWork\\\\BhookUseState\\\\src\\\\components\\\\ComponenteConHookUseState.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ComponenteConHookUseState = () => {\n  _s();\n\n  //--------------------------------------------------------------------------------------\n  //var nombre = \"Daniel Alvarez\";\n  //Esto no funciona, si cambia el valor de la variable, per no actualiza su valor en pantalla.\n  //const cambiarNombreHandler = (e, nombre) => {\n  //nombre = nombre;\n  //}\n  //--------------------------------------------------------------------------------------\n  //El hook useState permite añadir el estado de React a un componente de función (Actualiza el valor dentro de la pantalla).\n  //Declarando variable (var [variable, funcion] = funcionHook(valorVariable));.\n  var [nombre, setNombre] = useState(\"Daniel Alvarez\");\n\n  const cambiarNombreHandler = (e, nombre) => {\n    setNombre(nombre); //Cambiando el estado de la variable \"nombre\",\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"---------------------------------------------------------------------------------------------------------------------\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Componente \\\"ComponenteConHookUseState\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \"---------------------------------------------------------------------------------------------------------------------\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => cambiarNombreHandler(e, \"Esteban Alvarez\"),\n      children: \"Cambiar por \\\"Esteban Alvarez\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => cambiarNombreHandler(e, e.target.value),\n      placeholder: \"Escribe el nuevo nombre..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n};\n\n_s(ComponenteConHookUseState, \"0xPXU6D3CBRvI+EhrnlYAWTZeuU=\");\n\n_c = ComponenteConHookUseState;\nexport default ComponenteConHookUseState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponenteConHookUseState\");","map":{"version":3,"names":["React","ComponenteConHookUseState","nombre","setNombre","useState","cambiarNombreHandler","e","target","value"],"sources":["C:/Users/MelchioT/Documents/VisualStudioCodeWork/BhookUseState/src/components/ComponenteConHookUseState.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport const ComponenteConHookUseState = () => {\r\n  //--------------------------------------------------------------------------------------\r\n  //var nombre = \"Daniel Alvarez\";\r\n\r\n  //Esto no funciona, si cambia el valor de la variable, per no actualiza su valor en pantalla.\r\n  //const cambiarNombreHandler = (e, nombre) => {\r\n    //nombre = nombre;\r\n  //}\r\n  //--------------------------------------------------------------------------------------\r\n\r\n  //El hook useState permite añadir el estado de React a un componente de función (Actualiza el valor dentro de la pantalla).\r\n\r\n  //Declarando variable (var [variable, funcion] = funcionHook(valorVariable));.\r\n  var [nombre, setNombre] = useState(\"Daniel Alvarez\");\r\n\r\n  const cambiarNombreHandler = (e, nombre) => {\r\n    setNombre(nombre); //Cambiando el estado de la variable \"nombre\",\r\n  }\r\n\r\n  return (\r\n    <>\r\n      ---------------------------------------------------------------------------------------------------------------------\r\n      <h3>Componente \"ComponenteConHookUseState\"</h3>\r\n      ---------------------------------------------------------------------------------------------------------------------\r\n      <br />\r\n\r\n      <strong>{nombre}</strong>\r\n      <br/>\r\n      \r\n      <button onClick={e => cambiarNombreHandler(e, \"Esteban Alvarez\")}>Cambiar por \"Esteban Alvarez\"</button>\r\n      <br/>\r\n\r\n      {/*Cuando se modifica el valor del INPUT, se ejecuta la función y se envía el valor que contiene el INPUT.*/}\r\n      <input type=\"text\" onChange={e => cambiarNombreHandler(e, e.target.value)} placeholder=\"Escribe el nuevo nombre..\"/> {/*En resumen (e == Evento; target == Elemento DOM; value == Valor del elemento DOM).*/}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComponenteConHookUseState;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,MAAMC,yBAAyB,GAAG,MAAM;EAAA;;EAC7C;EACA;EAEA;EACA;EACE;EACF;EACA;EAEA;EAEA;EACA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,gBAAD,CAAlC;;EAEA,MAAMC,oBAAoB,GAAG,CAACC,CAAD,EAAIJ,MAAJ,KAAe;IAC1CC,SAAS,CAACD,MAAD,CAAT,CAD0C,CACvB;EACpB,CAFD;;EAIA,oBACE;IAAA,iJAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,wIAIE;MAAA;MAAA;MAAA;IAAA,QAJF,eAME;MAAA,UAASA;IAAT;MAAA;MAAA;MAAA;IAAA,QANF,eAOE;MAAA;MAAA;MAAA;IAAA,QAPF,eASE;MAAQ,OAAO,EAAEI,CAAC,IAAID,oBAAoB,CAACC,CAAD,EAAI,iBAAJ,CAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAA;MAAA;MAAA;IAAA,QAVF,eAaE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEA,CAAC,IAAID,oBAAoB,CAACC,CAAD,EAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,CAAtD;MAA2E,WAAW,EAAC;IAAvF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA,gBADF;AAiBD,CApCM;;GAAMP,yB;;KAAAA,yB;AAsCb,eAAeA,yBAAf"},"metadata":{},"sourceType":"module"}